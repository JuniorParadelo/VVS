
package es.udc.ws.app.client.service.soap.wsdl;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "OfferProvider", targetNamespace = "http://soap.ws.udc.es/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface OfferProvider {


    /**
     * 
     * @param offerDto
     * @return
     *     returns java.lang.Long
     * @throws SoapInputValidationException
     * @throws OfferAlreadyCreatedException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addOffer", targetNamespace = "http://soap.ws.udc.es/", className = "es.udc.ws.app.client.service.soap.wsdl.AddOffer")
    @ResponseWrapper(localName = "addOfferResponse", targetNamespace = "http://soap.ws.udc.es/", className = "es.udc.ws.app.client.service.soap.wsdl.AddOfferResponse")
    @Action(input = "http://soap.ws.udc.es/OfferProvider/addOfferRequest", output = "http://soap.ws.udc.es/OfferProvider/addOfferResponse", fault = {
        @FaultAction(className = SoapInputValidationException.class, value = "http://soap.ws.udc.es/OfferProvider/addOffer/Fault/SoapInputValidationException"),
        @FaultAction(className = OfferAlreadyCreatedException_Exception.class, value = "http://soap.ws.udc.es/OfferProvider/addOffer/Fault/OfferAlreadyCreatedException")
    })
    public Long addOffer(
        @WebParam(name = "offerDto", targetNamespace = "")
        OfferDto offerDto)
        throws OfferAlreadyCreatedException_Exception, SoapInputValidationException
    ;

    /**
     * 
     * @param keywords
     * @return
     *     returns java.util.List<es.udc.ws.app.client.service.soap.wsdl.OfferDto>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findOffer", targetNamespace = "http://soap.ws.udc.es/", className = "es.udc.ws.app.client.service.soap.wsdl.FindOffer")
    @ResponseWrapper(localName = "findOfferResponse", targetNamespace = "http://soap.ws.udc.es/", className = "es.udc.ws.app.client.service.soap.wsdl.FindOfferResponse")
    @Action(input = "http://soap.ws.udc.es/OfferProvider/findOfferRequest", output = "http://soap.ws.udc.es/OfferProvider/findOfferResponse")
    public List<OfferDto> findOffer(
        @WebParam(name = "keywords", targetNamespace = "")
        String keywords);

    /**
     * 
     * @param offerId
     * @throws SoapInstanceNotFoundException
     * @throws UserAlreadyReservedException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "removeOffer", targetNamespace = "http://soap.ws.udc.es/", className = "es.udc.ws.app.client.service.soap.wsdl.RemoveOffer")
    @ResponseWrapper(localName = "removeOfferResponse", targetNamespace = "http://soap.ws.udc.es/", className = "es.udc.ws.app.client.service.soap.wsdl.RemoveOfferResponse")
    @Action(input = "http://soap.ws.udc.es/OfferProvider/removeOfferRequest", output = "http://soap.ws.udc.es/OfferProvider/removeOfferResponse", fault = {
        @FaultAction(className = SoapInstanceNotFoundException.class, value = "http://soap.ws.udc.es/OfferProvider/removeOffer/Fault/SoapInstanceNotFoundException"),
        @FaultAction(className = UserAlreadyReservedException_Exception.class, value = "http://soap.ws.udc.es/OfferProvider/removeOffer/Fault/UserAlreadyReservedException")
    })
    public void removeOffer(
        @WebParam(name = "offerId", targetNamespace = "")
        Long offerId)
        throws SoapInstanceNotFoundException, UserAlreadyReservedException_Exception
    ;

    /**
     * 
     * @param bookingId
     */
    @WebMethod
    @RequestWrapper(localName = "useBooking", targetNamespace = "http://soap.ws.udc.es/", className = "es.udc.ws.app.client.service.soap.wsdl.UseBooking")
    @ResponseWrapper(localName = "useBookingResponse", targetNamespace = "http://soap.ws.udc.es/", className = "es.udc.ws.app.client.service.soap.wsdl.UseBookingResponse")
    @Action(input = "http://soap.ws.udc.es/OfferProvider/useBookingRequest", output = "http://soap.ws.udc.es/OfferProvider/useBookingResponse")
    public void useBooking(
        @WebParam(name = "bookingId", targetNamespace = "")
        Long bookingId);

    /**
     * 
     * @param bookingId
     * @return
     *     returns es.udc.ws.app.client.service.soap.wsdl.BookingDto
     * @throws SoapInstanceNotFoundException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findBooking", targetNamespace = "http://soap.ws.udc.es/", className = "es.udc.ws.app.client.service.soap.wsdl.FindBooking")
    @ResponseWrapper(localName = "findBookingResponse", targetNamespace = "http://soap.ws.udc.es/", className = "es.udc.ws.app.client.service.soap.wsdl.FindBookingResponse")
    @Action(input = "http://soap.ws.udc.es/OfferProvider/findBookingRequest", output = "http://soap.ws.udc.es/OfferProvider/findBookingResponse", fault = {
        @FaultAction(className = SoapInstanceNotFoundException.class, value = "http://soap.ws.udc.es/OfferProvider/findBooking/Fault/SoapInstanceNotFoundException")
    })
    public BookingDto findBooking(
        @WebParam(name = "bookingId", targetNamespace = "")
        Long bookingId)
        throws SoapInstanceNotFoundException
    ;

    /**
     * 
     * @param creditCardNumber
     * @param offerId
     * @param userId
     * @return
     *     returns java.lang.Long
     * @throws SoapInputValidationException
     * @throws SoapInstanceNotFoundException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addBooking", targetNamespace = "http://soap.ws.udc.es/", className = "es.udc.ws.app.client.service.soap.wsdl.AddBooking")
    @ResponseWrapper(localName = "addBookingResponse", targetNamespace = "http://soap.ws.udc.es/", className = "es.udc.ws.app.client.service.soap.wsdl.AddBookingResponse")
    @Action(input = "http://soap.ws.udc.es/OfferProvider/addBookingRequest", output = "http://soap.ws.udc.es/OfferProvider/addBookingResponse", fault = {
        @FaultAction(className = SoapInstanceNotFoundException.class, value = "http://soap.ws.udc.es/OfferProvider/addBooking/Fault/SoapInstanceNotFoundException"),
        @FaultAction(className = SoapInputValidationException.class, value = "http://soap.ws.udc.es/OfferProvider/addBooking/Fault/SoapInputValidationException")
    })
    public Long addBooking(
        @WebParam(name = "offerId", targetNamespace = "")
        Long offerId,
        @WebParam(name = "userId", targetNamespace = "")
        String userId,
        @WebParam(name = "creditCardNumber", targetNamespace = "")
        String creditCardNumber)
        throws SoapInputValidationException, SoapInstanceNotFoundException
    ;

    /**
     * 
     * @param offerDto
     * @throws SoapInputValidationException
     * @throws SoapInstanceNotFoundException
     * @throws UserAlreadyReservedException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "updateOffer", targetNamespace = "http://soap.ws.udc.es/", className = "es.udc.ws.app.client.service.soap.wsdl.UpdateOffer")
    @ResponseWrapper(localName = "updateOfferResponse", targetNamespace = "http://soap.ws.udc.es/", className = "es.udc.ws.app.client.service.soap.wsdl.UpdateOfferResponse")
    @Action(input = "http://soap.ws.udc.es/OfferProvider/updateOfferRequest", output = "http://soap.ws.udc.es/OfferProvider/updateOfferResponse", fault = {
        @FaultAction(className = SoapInputValidationException.class, value = "http://soap.ws.udc.es/OfferProvider/updateOffer/Fault/SoapInputValidationException"),
        @FaultAction(className = SoapInstanceNotFoundException.class, value = "http://soap.ws.udc.es/OfferProvider/updateOffer/Fault/SoapInstanceNotFoundException"),
        @FaultAction(className = UserAlreadyReservedException_Exception.class, value = "http://soap.ws.udc.es/OfferProvider/updateOffer/Fault/UserAlreadyReservedException")
    })
    public void updateOffer(
        @WebParam(name = "offerDto", targetNamespace = "")
        OfferDto offerDto)
        throws SoapInputValidationException, SoapInstanceNotFoundException, UserAlreadyReservedException_Exception
    ;

}
